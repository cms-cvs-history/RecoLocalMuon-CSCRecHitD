process TEST = {

untracked PSet maxEvents = {untracked int32 input = 101}
# Specify your input file(s)
       source = PoolSource {
                untracked vstring fileNames = {
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_350_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_351_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_352_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_353_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_354_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_355_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_356_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_357_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_358_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_359_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_360_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_361_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_362_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_363_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_364_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_365_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_366_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_367_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_368_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_369_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_370_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_371_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_372_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_373_probev2.root",
                "file:/uscmst1b_scratch/lpc1/lpcmuon/ibloch/MC/MC_gen_1_8_0_pre7/CMSSW_1_8_0_pre7/src/data/muons/muplus_e_10_60_374_probev2.root"
		}
                //untracked uint32 skipEvents  = 1
	        untracked uint32 debugVebosity = 10
                untracked bool   debugFlag     = false
               }

# Specify the output file for the reconstructed events.
  module out = PoolOutputModule {
    untracked string fileName ="eventsOutput.root"
  }

# These are some very useful utilities.
  service = Timing { }
  service = SimpleMemoryCheck { }

#######################################################################################
### Variables read from database/fake for calibration purposes
#######################################################################################
#
# CSC Calib (used also for digis)
#
## use include below to run on "hardcoded" DB conditions
#inforfakeDB
//include "CalibMuon/Configuration/data/CSC_FakeDBConditions.cff"
include "CalibMuon/Configuration/data/CSC_FrontierDBConditions_DevDB.cff"
##FRONTIER## use include below to query FroNtier for DB conditions
##FRONTIERinclude "CalibMuon/Configuration/data/CSC_FrontierConditions.cff"
##FRONTIER
##FRONTIER# needed for frontier access on new dev servlet
##FRONTIER
##FRONTIERreplace cscConditions.connect = "frontier://FrontierDev/CMS_COND_CSC"
##FRONTIERreplace cscConditions.toGet = {
##FRONTIER        { string record = "CSCGainsRcd"
##FRONTIER          string tag = "CSCGains_ideal"},
##FRONTIER        {string record = "CSCNoiseMatrixRcd"
##FRONTIER          string tag = "CSCNoiseMatrix_ideal"},
##FRONTIER        {string record = "CSCcrosstalkRcd"
##FRONTIER          string tag = "CSCCrosstalk_ideal"},
##FRONTIER        {string record = "CSCPedestalsRcd"
##FRONTIER         string tag = "CSCPedestals_ideal"} 
##FRONTIER     }

#######################################################################################
### Geometry
#######################################################################################
### seems to be needed now - still needed in 18X?
    es_module = MuonNumberingInitialization { }
### Geometry
    include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"
### B field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

#######################################################################################
### digis
#######################################################################################
# for PDTRecord, needed by digitizer
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

# for all digis
# include "Configuration/StandardSequences/data/Digi.cff"

# to just do the CSC digis
 include "SimMuon/CSCDigitizer/data/muoncscdigi.cfi"

# to disable the CSC noise, use the following two lines (thanks Rick :) )
  //replace muonCSCDigis.strips.doNoise = false
  //replace muonCSCDigis.wires.doNoise = false
  //replace muonCSCDigis.strips.capacativeCrosstalk = 35.
  //replace muonCSCDigis.strips.resistiveCrosstalkScaling = 2.
  //replace muonCSCDigis.strips.doCrosstalk= false
  //replace muonCSCDigis.strips.doCorrelatedNoise= false

# random numbers needed by the digitizers
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 736370
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 435240370
         untracked uint32 g4SimHits  = 735161370
         untracked uint32 mix        = 63370
         untracked uint32 siPixelDigis = 6016370
         untracked uint32 siStripDigis = 32300370
         untracked uint32 ecalUnsuppressedDigis = 8641370
         untracked uint32 hcalUnsuppressedDigis = 4578370
         untracked uint32 hcalDigis  = 61528370
         untracked uint32 muonCSCDigis  = 87315370
         untracked uint32 muonDTDigis = 23002370
         untracked uint32 muonRPCDigis = 5583370
      }
   }

#######################################################################################
### rechits
#######################################################################################
#module rechitproducer = csc2DRecHits from "RecoLocalMuon/CSCRecHitB/data/cscRecHitB.cfi"
//module csc2DRecHits = csc2DRecHits from "RecoLocalMuon/CSCRecHitB/data/cscRecHitB.cfi"
module csc2DRecHits = csc2DRecHits from "RecoLocalMuon/CSCRecHitD/data/cscRecHitD.cfi"

#######################################################################################
# Specify the segment reconstruction routine.
#######################################################################################
#  include "RecoLocalMuon/CSCRecHit/test/messages_debug.cfi"

  include "RecoLocalMuon/CSCSegment/data/cscSegments.cfi"

# run DF	
//  replace cscSegments.algo_type = 3
# run ST
  replace cscSegments.algo_type = 4

###########################################################################################
# include a fake mixing module (creates the crossingframe collection needed to access the simhits)
include "SimGeneral/MixingModule/data/mixNoPU.cfi"

# Here is the path of modules for the analysis
## path to redo rechits and segments
// Build rechits
path p = { mix, muonCSCDigis, csc2DRecHits}

// ... or build rechits + segments
//path p = { mix, muonCSCDigis, csc2DRecHits, cscSegments}

# Specify the output:
#	endpath e = {out}

}
